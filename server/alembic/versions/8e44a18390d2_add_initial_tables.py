"""add initial tables

Revision ID: 8e44a18390d2
Revises: 
Create Date: 2025-07-02 15:25:18.270413

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '8e44a18390d2'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('branches',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('phone_number', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_branches_id'), 'branches', ['id'], unique=False)
    op.create_table('pricing_rules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('base_rate', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('rate_per_kg', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('rate_per_km', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_pricing_rules_id'), 'pricing_rules', ['id'], unique=False)
    op.create_table('user_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_user_types_id'), 'user_types', ['id'], unique=False)
    op.create_table('vehicle_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_vehicle_types_id'), 'vehicle_types', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('full_name', sa.String(), nullable=True),
    sa.Column('phone_number', sa.String(), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('user_type_id', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_type_id'], ['user_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('vehicles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('license_plate', sa.String(), nullable=False),
    sa.Column('make', sa.String(), nullable=True),
    sa.Column('model', sa.String(), nullable=True),
    sa.Column('year', sa.Integer(), nullable=True),
    sa.Column('capacity_kg', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('vehicle_type_id', sa.Integer(), nullable=False),
    sa.Column('current_branch_id', sa.Integer(), nullable=True),
    sa.Column('is_available', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['current_branch_id'], ['branches.id'], ),
    sa.ForeignKeyConstraint(['vehicle_type_id'], ['vehicle_types.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('license_plate')
    )
    op.create_index(op.f('ix_vehicles_id'), 'vehicles', ['id'], unique=False)
    op.create_table('parcels',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tracking_number', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('weight_kg', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('dimensions_cm', sa.String(), nullable=True),
    sa.Column('declared_value', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('sender_id', sa.Integer(), nullable=True),
    sa.Column('sender_name', sa.String(), nullable=True),
    sa.Column('sender_address', sa.Text(), nullable=True),
    sa.Column('sender_phone_number', sa.String(), nullable=True),
    sa.Column('recipient_name', sa.String(), nullable=True),
    sa.Column('recipient_address', sa.Text(), nullable=True),
    sa.Column('recipient_phone_number', sa.String(), nullable=True),
    sa.Column('current_branch_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['current_branch_id'], ['branches.id'], ),
    sa.ForeignKeyConstraint(['sender_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_parcels_id'), 'parcels', ['id'], unique=False)
    op.create_index(op.f('ix_parcels_tracking_number'), 'parcels', ['tracking_number'], unique=True)
    op.create_table('branch_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('parcel_id', sa.Integer(), nullable=False),
    sa.Column('branch_id', sa.Integer(), nullable=False),
    sa.Column('arrived_at', sa.DateTime(), nullable=True),
    sa.Column('departed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['branch_id'], ['branches.id'], ),
    sa.ForeignKeyConstraint(['parcel_id'], ['parcels.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('deliveries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('parcel_id', sa.Integer(), nullable=False),
    sa.Column('driver_id', sa.Integer(), nullable=True),
    sa.Column('start_location', sa.String(), nullable=True),
    sa.Column('end_location', sa.String(), nullable=True),
    sa.Column('scheduled_pickup_at', sa.DateTime(), nullable=True),
    sa.Column('actual_pickup_at', sa.DateTime(), nullable=True),
    sa.Column('scheduled_delivery_at', sa.DateTime(), nullable=True),
    sa.Column('actual_delivery_at', sa.DateTime(), nullable=True),
    sa.Column('delivery_status', sa.Enum('SCHEDULED', 'PICKED_UP', 'OUT_FOR_DELIVERY', 'DELIVERED', 'FAILED_ATTEMPT', name='delivery_status_enum'), nullable=False),
    sa.Column('cost', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('pricing_rule_id', sa.Integer(), nullable=True),
    sa.Column('calculated_price', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['driver_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['parcel_id'], ['parcels.id'], ),
    sa.ForeignKeyConstraint(['pricing_rule_id'], ['pricing_rules.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('parcel_id')
    )
    op.create_index(op.f('ix_deliveries_id'), 'deliveries', ['id'], unique=False)
    op.create_table('payments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('parcel_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('payment_method', sa.Enum('CASH_ON_DELIVERY', 'CREDIT_CARD', 'WALLET', name='payment_method_enum'), nullable=False),
    sa.Column('paid_at', sa.DateTime(), nullable=True),
    sa.Column('is_paid', sa.Boolean(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['parcel_id'], ['parcels.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_payments_id'), 'payments', ['id'], unique=False)
    op.create_table('tracking_updates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('parcel_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('branch_id', sa.Integer(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('status_detail', sa.Enum('ENTERED_SYSTEM', 'AT_SORTING_CENTER', 'OUT_FOR_DELIVERY', name='status_detail_enum'), nullable=True),
    sa.Column('event_type', sa.Enum('SCANNED_IN', 'DEPARTED', 'ARRIVED', 'DELIVERED', name='event_type_enum'), nullable=True),
    sa.ForeignKeyConstraint(['branch_id'], ['branches.id'], ),
    sa.ForeignKeyConstraint(['parcel_id'], ['parcels.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tracking_updates_id'), 'tracking_updates', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_tracking_updates_id'), table_name='tracking_updates')
    op.drop_table('tracking_updates')
    op.drop_index(op.f('ix_payments_id'), table_name='payments')
    op.drop_table('payments')
    op.drop_index(op.f('ix_deliveries_id'), table_name='deliveries')
    op.drop_table('deliveries')
    op.drop_table('branch_history')
    op.drop_index(op.f('ix_parcels_tracking_number'), table_name='parcels')
    op.drop_index(op.f('ix_parcels_id'), table_name='parcels')
    op.drop_table('parcels')
    op.drop_index(op.f('ix_vehicles_id'), table_name='vehicles')
    op.drop_table('vehicles')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_vehicle_types_id'), table_name='vehicle_types')
    op.drop_table('vehicle_types')
    op.drop_index(op.f('ix_user_types_id'), table_name='user_types')
    op.drop_table('user_types')
    op.drop_index(op.f('ix_pricing_rules_id'), table_name='pricing_rules')
    op.drop_table('pricing_rules')
    op.drop_index(op.f('ix_branches_id'), table_name='branches')
    op.drop_table('branches')
    # ### end Alembic commands ###
